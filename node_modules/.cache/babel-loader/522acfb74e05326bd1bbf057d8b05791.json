{"ast":null,"code":"import _classCallCheck from \"/home/pchatzig/Desktop/optmining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pchatzig/Desktop/optmining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pchatzig/Desktop/optmining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pchatzig/Desktop/optmining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pchatzig/Desktop/optmining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pchatzig/Desktop/optmining/src/components/Results.jsx\";\nimport React, { Component } from 'react';\nimport { Panel, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './Results.css';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    _classCallCheck(this, Home);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Home).apply(this, arguments));\n  }\n\n  _createClass(Home, [{\n    key: \"showAlert\",\n    value: function showAlert(arg) {\n      alert(arg);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var results;\n      var currencyData = [];\n\n      for (var n in this.props.currencyData) {\n        currencyData.push(React.createElement(ListGroupItem, {\n          value: JSON.stringify(this.props.currencyData[n]),\n          onClick: function onClick(e) {\n            return _this.showAlert(e.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, n));\n      }\n\n      var poolData = [];\n\n      for (var n in this.props.poolData) {\n        poolData.push(React.createElement(ListGroupItem, {\n          value: JSON.stringify(this.props.poolData[n]),\n          onClick: function onClick(e) {\n            return _this.showAlert(e.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, n));\n      }\n\n      var detailed_data = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"narrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Panel.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Currency Data\"), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, currencyData))), React.createElement(\"div\", {\n        className: \"narrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Panel.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Pool Data\"), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, poolData)))));\n\n      if (this.props.show) {\n        var bars = [];\n\n        if (this.props.type == \"single\") {\n          for (var n in this.props.keys) {\n            bars.push(React.createElement(Bar, {\n              dataKey: n,\n              fill: this.props.keys[n],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              },\n              __self: this\n            }));\n          }\n\n          var width = poolData.length * 200 + 500;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(BarChart, {\n            width: width,\n            height: 400,\n            data: this.props.data,\n            margin: {\n              top: 5,\n              right: 0,\n              left: 50,\n              bottom: 50\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, React.createElement(CartesianGrid, {\n            strokeDasharray: \"10 10\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }), React.createElement(XAxis, {\n            dataKey: \"name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }), React.createElement(YAxis, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }), React.createElement(Tooltip, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }), React.createElement(Legend, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }), bars), detailed_data);\n        } else if (this.props.type == \"multicurr\" || this.props.type == \"multialgo\") {\n          for (var n in this.props.keys) {\n            bars.push(React.createElement(Bar, {\n              dataKey: n,\n              stackId: \"a\",\n              fill: this.props.keys[n],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64\n              },\n              __self: this\n            }));\n          }\n\n          var width = poolData.length * 200 + 500;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, React.createElement(BarChart, {\n            width: width,\n            height: 400,\n            data: this.props.data,\n            margin: {\n              top: 5,\n              right: 0,\n              left: 50,\n              bottom: 50\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, React.createElement(CartesianGrid, {\n            strokeDasharray: \"10 10\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }), React.createElement(XAxis, {\n            dataKey: \"name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }), React.createElement(YAxis, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }), React.createElement(Tooltip, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }), React.createElement(Legend, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }), bars), React.createElement(\"div\", {\n            className: \"left-push\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, detailed_data));\n        }\n      } else return React.createElement(React.Fragment, null);\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport { Home as default };","map":{"version":3,"sources":["/home/pchatzig/Desktop/optmining/src/components/Results.jsx"],"names":["React","Component","Panel","ListGroup","ListGroupItem","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Home","arg","alert","results","currencyData","n","props","push","JSON","stringify","e","showAlert","target","value","poolData","detailed_data","show","bars","type","keys","width","length","data","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Panel, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from  'recharts';\nimport './Results.css';\n\nexport default class Home extends Component {\n\n    showAlert(arg) {\n      alert(arg);\n    }\n\n    render() {\n      var results;\n      var currencyData = [];\n      for (var n in this.props.currencyData)\n        currencyData.push(<ListGroupItem value={JSON.stringify(this.props.currencyData[n])} onClick={e => this.showAlert(e.target.value)}>{n}</ListGroupItem>);\n      var poolData = [];\n      for (var n in this.props.poolData)\n        poolData.push(<ListGroupItem value={JSON.stringify(this.props.poolData[n])} onClick={e => this.showAlert(e.target.value)}>{n}</ListGroupItem>);\n\n      var detailed_data =\n                  <>\n                  <div className='inline'> <div className='narrow'>\n                  <Panel>\n                  <Panel.Heading>Currency Data</Panel.Heading>\n                  <ListGroup>\n                  {currencyData}\n                  </ListGroup>\n                  </Panel>\n                  </div>\n                  <div className='narrow'>\n                  <Panel>\n                  <Panel.Heading>Pool Data</Panel.Heading>\n                  <ListGroup>\n                  {poolData}\n                  </ListGroup>\n                  </Panel>\n                  </div></div>\n                  </>;\n\n      if(this.props.show) {\n        var bars = [];\n        if(this.props.type == \"single\") {\n          for(var n in this.props.keys)\n            bars.push(<Bar dataKey={n} fill={this.props.keys[n]}/>)\n          var width = (poolData.length*200) + 500;\n          return(\n            <div>\n            <BarChart width={width} height={400} data={this.props.data} margin={{top: 5, right: 0, left: 50, bottom: 50}}>\n                    <CartesianGrid strokeDasharray=\"10 10\"/>\n                    <XAxis dataKey=\"name\"/>\n                    <YAxis/>\n                    <Tooltip/>\n                    <Legend/>\n                    {bars}\n            </BarChart>\n            {detailed_data}\n            </div>\n          );\n        }\n\n        else if(this.props.type == \"multicurr\" || this.props.type == \"multialgo\") {\n          for(var n in this.props.keys)\n            bars.push(<Bar dataKey={n} stackId=\"a\" fill={this.props.keys[n]} />)\n          var width = (poolData.length*200) + 500;\n          return (\n            <div>\n          \t<BarChart width={width} height={400} data={this.props.data} margin={{top: 5, right: 0, left: 50, bottom: 50}}>\n             <CartesianGrid strokeDasharray=\"10 10\"/>\n             <XAxis dataKey=\"name\"/>\n             <YAxis/>\n             <Tooltip/>\n             <Legend />\n             {bars}\n            </BarChart>\n            <div className='left-push'>{detailed_data}</div>\n            </div>\n          );\n        }\n      }\n\n      else\n        return(<></>);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}