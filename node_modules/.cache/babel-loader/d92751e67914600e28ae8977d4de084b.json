{"ast":null,"code":"import _classCallCheck from \"/home/pchatzig/Desktop/optmining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pchatzig/Desktop/optmining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pchatzig/Desktop/optmining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pchatzig/Desktop/optmining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pchatzig/Desktop/optmining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pchatzig/Desktop/optmining/src/components/MainForm.jsx\";\nimport React, { Component } from 'react';\nimport Home from './Home';\nimport { Link } from 'react-router-dom';\nimport { OverlayTrigger, Tooltip, Form, FormGroup, FormControl, ControlLabel, HelpBlock, Checkbox, Button, ButtonToolbar, DropdownButton, MenuItem, Radio } from 'react-bootstrap';\nimport './MainForm.css';\nimport exec from 'child_process';\nimport ReactDOM from 'react-dom';\n\nvar MainForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainForm, _Component);\n\n  function MainForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MainForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MainForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currencies: {},\n      // all pulled currencies from API and user's entered custom currencies\n      pools: {},\n      // all pulled pools from API and user's entered custom pools\n      algos: {},\n      // all pulled algorithm data from API\n      showCustomPoolOptions: false,\n      // if true show options for adding a custom pool, otherwise show the \"add pool\" button\n      showCustomCurrencyOptions: false,\n      // if true show options for adding a custom currency, otherwise show the \"add currency\" button\n      isMultiCurr: false,\n      // checks if selected currencies are more than one currency\n      isMultiAlgo: false // checks if selected currencies are multi-algorithm or not\n\n    };\n\n    _this.onSubmit = function () {\n      var risk;\n      var hash;\n      var conversion;\n      var pps;\n      var error = false;\n      /* find all selected currencies and pools */\n\n      var pps_pool = [];\n      var algos = [];\n      var selected_currencies = {};\n      var selected_pools = {};\n      var colors = {};\n\n      for (var n in _this.state.currencies) {\n        if (_this.state.currencies[n].checked) {\n          selected_currencies[n] = _this.state.currencies[n];\n          colors[n] = _this.state.currencies[n].color;\n        }\n      }\n\n      for (var n in _this.state.pools) {\n        if (_this.state.pools[n].checked) if (!_this.state.pools[n].pps) selected_pools[n] = _this.state.pools[n];else {\n          // skip pps pool for now\n          if (pps_pool.length == 0 || _this.state.pools[pps_pool[0]].fee > _this.state.pools[n].fee) pps_pool.push(n);\n        }\n      }\n\n      if (_this.state.isMultiAlgo) {\n        for (var n in _this.state.currencies) {\n          if (_this.state.currencies[n].checked && algos.indexOf(_this.state.currencies[n].algo) < 0) algos.push(_this.state.currencies[n].algo);\n        }\n      } // calculate and check risk\n\n\n      risk = ReactDOM.findDOMNode(_this.refs.Risk).value.trim();\n      risk = risk * 0.0001;\n      if (risk == 0) risk = 0.0000000000001;\n\n      if (risk == \"\" || isNaN(risk) || risk < 0) {\n        alert(\"Please enter a valid risk value.\");\n        error = true;\n      } // calculate and check hash and conversion\n\n\n      if (!_this.state.isMultiAlgo) {\n        hash = ReactDOM.findDOMNode(_this.refs.Hash).value.trim();\n        conversion = ReactDOM.findDOMNode(_this.refs.Hash_Conversion).value.trim();\n\n        if (hash == \"\" || isNaN(hash) || hash < 0 || hash > 99999999999) {\n          alert(\"Please enter a valid hash power.\");\n          error = true;\n        }\n      } else {\n        // multi-algorithm\n        hash = {};\n        conversion = {};\n\n        for (var a in algos) {\n          var hash_name = \"Hash_\" + algos[a];\n          var conv_name = \"Hash_Conversion_\" + algos[a];\n          hash[algos[a]] = ReactDOM.findDOMNode(_this.refs[hash_name]).value.trim();\n          conversion[algos[a]] = ReactDOM.findDOMNode(_this.refs[conv_name]).value.trim();\n\n          if (hash[algos[a]] == \"\" || isNaN(hash[algos[a]]) || hash[algos[a]] < 0 || hash[algos[a]] > 99999999999) {\n            alert(\"Please enter a valid hash power for each algorithm.\");\n            error = true;\n          }\n        }\n      } // convert hash / hashes if needed\n\n\n      if (!_this.state.isMultiAlgo) hash = _this.convertHash(hash, ReactDOM.findDOMNode(_this.refs.Hash_Conversion).value.trim());else for (var a in algos) {\n        var name = \"Hash_Conversion_\" + algos[a];\n        hash[algos[a]] = _this.convertHash(hash[algos[a]], ReactDOM.findDOMNode(_this.refs[name]).value.trim());\n      } // add PPS pool last if exists\n\n      pps = pps_pool.length > 0;\n      if (pps) selected_pools[n] = _this.state.pools[pps_pool[0]];\n      /**** send to optimize and forward results to Return.jsx **********/\n\n      var poolData = '';\n      var data = [];\n      /****************************** SINGLE CURRENCY SOLVE ******************************/\n\n      if (!_this.state.isMultiCurr && !_this.state.isMultiAlgo) {\n        // single currency\n        var curr = _this.state.currencies[Object.keys(selected_currencies)[0]];\n\n        var reward = curr.block_reward * curr.prices.USD;\n        /* format all data arguments for optimize */\n\n        for (var name in selected_pools) {\n          poolData += selected_pools[name].hash + ',' + selected_pools[name].fee + ',';\n        }\n\n        poolData = poolData.substring(0, poolData.length - 1); // remove last ,\n\n        for (var n in selected_pools) {\n          data.push({\n            name: n\n          });\n        }\n\n        data.push({\n          name: \"Solo\"\n        });\n        console.log(poolData);\n        fetch('http://smart-miner.com:5000/solve/single', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            pools: poolData,\n            rho: risk,\n            //risk aversion\n            R: reward,\n            //block reward\n            lA: hash,\n            //hash power\n            PPS: pps // boolean if pps pool is included\n\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (responseData) {\n          console.log('solved singlecurr optimization: ' + JSON.stringify(responseData));\n          var conversion = ReactDOM.findDOMNode(_this.refs.Hash_Conversion).value.trim();\n\n          var hashes = _this.parseResponse(responseData);\n          /* maps the hash rates to their respective pools */\n\n\n          var i = 0;\n\n          while (i < hashes.length) {\n            var val = hashes[i];\n            if (val < 0) val = 0;\n            if (conversion == \"TH/s\") val /= 1000;else if (conversion == \"PH/s\") val /= 1000000;\n            val = Math.round(Number(val) * 100) / 100;\n            data[i][\"Hash Power\"] = val;\n            i++;\n          }\n          /* send results graph data */\n\n\n          _this.props.updateResults(\"single\", data, {\n            \"Hash Power\": \"#82ca9d\"\n          }, selected_currencies, selected_pools);\n        }).catch(function (error) {\n          console.error(error);\n          alert(\"There was an error contacting the server. Please inform the web admin.\");\n        });\n      }\n      /****************************** MULTI CURRENCY SOLVE ******************************/\n      else if (!_this.state.isMultiAlgo) {\n          /* format all data arguments for optimize */\n          var found_currencies = [];\n\n          for (var n in selected_pools) {\n            var curr = _this.state.currencies[selected_pools[n].currency];\n            found_currencies.push(selected_pools[n].currency);\n            poolData += selected_pools[n].hash + ',' + selected_pools[n].fee + ',' + curr.block_reward * curr.prices.USD + ',' + curr.block_time + ',' + curr.total_hash + ',';\n          }\n          /* add fake pool for solo mine only currencies */\n\n\n          var fake_pools = 0;\n\n          for (var n in selected_currencies) {\n            if (found_currencies.indexOf(n) < 0) {\n              var curr = _this.state.currencies[n];\n              poolData += 1000 + ',' + 0.99 + ',' + curr.block_reward * curr.prices.USD + ',' + curr.block_time + ',' + curr.total_hash + ',';\n              fake_pools++;\n            }\n          }\n\n          poolData = poolData.substring(0, poolData.length - 1); // remove last ,\n\n          console.log(poolData);\n          fetch('http://smart-miner.com:5000/solve/multicurr', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              pools: poolData,\n              //TODO FORMAT DATA FOR MULTICURR\n              rho: risk,\n              //risk aversion\n              lA: hash,\n              //hash power\n              PPS: pps\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (responseData) {\n            console.log('solved multicurr optimization: ' + JSON.stringify(responseData));\n            var conversion = ReactDOM.findDOMNode(_this.refs.Hash_Conversion).value.trim();\n\n            var hashes = _this.parseResponse(responseData);\n            /* maps the hash rates to their respective pools */\n\n\n            var i = 0;\n\n            for (var name in selected_pools) {\n              data.push(_this.formatData(selected_pools[name].currency, name, hashes[i], conversion));\n              i++;\n            } // skip over fake pools\n\n\n            while (fake_pools > 0) {\n              fake_pools--;\n              i++;\n            }\n            /* map left over values as solos */\n\n\n            for (var c in selected_currencies) {\n              if (i < hashes.length) {\n                data.push(_this.formatData(c, 'Solo ' + c, hashes[i], conversion));\n                i++;\n              }\n            }\n            /* send results graph data */\n\n\n            _this.props.updateResults(\"multicurr\", data, colors, selected_currencies, selected_pools);\n          }).catch(function (error) {\n            console.error(error);\n            alert(\"There was an error contacting the server. Please inform the web admin.\");\n          });\n        }\n        /****************************** MULTI ALGO SOLVE ******************************/\n        else {\n            /* format all data arguments for optimize */\n            var found_currencies = [];\n\n            for (var n in selected_pools) {\n              var curr = _this.state.currencies[selected_pools[n].currency];\n              var h = hash[curr.algo];\n              found_currencies.push(selected_pools[n].currency);\n              poolData += selected_pools[n].hash + ',' + selected_pools[n].fee + ',' + curr.block_reward * curr.prices.USD + ',' + curr.block_time + ',' + curr.total_hash + ',' + h + ',';\n            }\n            /* add fake pool for solo mine only currencies */\n\n\n            var fake_pools = 0;\n\n            for (var n in selected_currencies) {\n              if (found_currencies.indexOf(n) < 0) {\n                var curr = _this.state.currencies[n];\n                var h = hash[curr.algo];\n                poolData += 1000 + ',' + 0.99 + ',' + curr.block_reward * curr.prices.USD + ',' + curr.block_time + ',' + curr.total_hash + ',' + h + ',';\n                fake_pools++;\n              }\n            }\n\n            poolData = poolData.substring(0, poolData.length - 1); // remove last ,\n\n            console.log(poolData);\n            fetch('http://smart-miner.com:5000/solve/multialgo', {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                pools: poolData,\n                // pool data\n                rho: risk,\n                //risk aversion\n                PPS: pps\n              })\n            }).then(function (response) {\n              return response.json();\n            }).then(function (responseData) {\n              console.log('solved multialgo optimization: ' + JSON.stringify(responseData));\n\n              var hashes = _this.parseResponse(responseData);\n              /* finds highest conversion rate used for hash rates */\n\n\n              var conversion;\n\n              for (var a in algos) {\n                var check = ReactDOM.findDOMNode(_this.refs[\"Hash_Conversion_\" + algos[a]]).value.trim();\n                if (conversion == null || conversion == \"GH/s\") conversion = check;else if (conversion == \"TH/s\" && check == \"PH/s\") conversion = check;\n              }\n              /* maps the hash rates to their respective pools */\n\n\n              var i = 0;\n\n              for (var name in selected_pools) {\n                var c = selected_pools[name].currency;\n                data.push(_this.formatData(c, name, hashes[i], conversion));\n                i++;\n              } // skip over fake pools\n\n\n              while (fake_pools > 0) {\n                fake_pools--;\n                i++;\n              }\n              /* map left over values as solos */\n\n\n              for (var c in selected_currencies) {\n                if (i < hashes.length) {\n                  data.push(_this.formatData(c, 'Solo ' + c, hashes[i], conversion));\n                  i++;\n                }\n              }\n              /* send results graph data */\n\n\n              _this.props.updateResults(\"multialgo\", data, colors, selected_currencies, selected_pools);\n            }).catch(function (error) {\n              console.error(error);\n              alert(\"There was an error contacting the server. Please inform the web admin.\");\n            });\n          }\n    };\n\n    _this.parseResponse = function (responseData) {\n      responseData = responseData.solved.replace('[', '').replace(']', '').replace('\\n', '');\n      var hashes = responseData.split(' ');\n\n      for (var i = hashes.length - 1; i >= 0; i--) {\n        if (hashes[i].length < 2) hashes.splice(i, 1);\n      }\n\n      return hashes;\n    };\n\n    _this.formatData = function (curr, name, val, conversion) {\n      if (val < 0) val = 0;\n      if (conversion == \"TH/s\") val /= 1000;else if (conversion == \"PH/s\") val /= 1000000;\n      val = Math.round(Number(val) * 100) / 100;\n      var d = {\n        name: name\n      };\n      d[curr] = val;\n      return d;\n    };\n\n    _this.onAddPool = function () {\n      _this.setState({\n        showCustomPoolOptions: true\n      });\n    };\n\n    _this.onAddPoolConfirm = function () {\n      var ps = _this.state.pools;\n      var curr = ReactDOM.findDOMNode(_this.refs.Custom_Pool_Currency).value.trim();\n      var name = ReactDOM.findDOMNode(_this.refs.Custom_Pool_Name).value.trim();\n      var hash = ReactDOM.findDOMNode(_this.refs.Custom_Pool_Hash).value.trim();\n      var fee = ReactDOM.findDOMNode(_this.refs.Custom_Pool_Fee).value.trim() / 100;\n      var conversion = ReactDOM.findDOMNode(_this.refs.Custom_Pool_Conversion).value.trim();\n      var pps = ReactDOM.findDOMNode(_this.refs.Custom_Pool_PPS).value.trim() == 'yes'; // do error checking all inputs for custom pool\n\n      if (name == null || name.length < 3) alert(\"Custom pool name must be atleast 3 characters.\");else if (hash == \"\" || isNaN(hash) || hash < 0 || hash > 99999999999) alert(\"Please enter a valid pool hash power.\");else if (conversion.length < 1) alert(\"Please select a pool hash power unit.\");else if (curr == \"\") alert(\"Please select a currency that the pool mines.\");else if (fee == \"\" || isNaN(fee) || fee < 0 || fee > 1) alert(\"Please enter a valid pool fee.\");else {\n        var show = _this.state.currencies[curr].checked;\n        name += \" (\" + curr + \")\";\n        hash = _this.convertHash(hash, conversion);\n        ps[name] = {\n          hash: hash,\n          fee: fee,\n          currency: curr,\n          pps: pps,\n          show: show,\n          checked: false\n        };\n\n        _this.setState({\n          pools: ps\n        });\n\n        _this.setState({\n          showCustomPoolOptions: false\n        });\n      }\n    };\n\n    _this.onAddPoolCancel = function () {\n      _this.setState({\n        showCustomPoolOptions: false\n      });\n    };\n\n    _this.onAddCurrency = function () {\n      _this.setState({\n        showCustomCurrencyOptions: true\n      });\n    };\n\n    _this.onAddCurrencyConfirm = function () {\n      var cs = _this.state.currencies;\n      var name = ReactDOM.findDOMNode(_this.refs.Custom_Currency_Name).value.trim();\n      var symbol = ReactDOM.findDOMNode(_this.refs.Custom_Currency_Symbol).value.trim();\n      var algo = ReactDOM.findDOMNode(_this.refs.Custom_Currency_Algo).value.trim();\n      var price = ReactDOM.findDOMNode(_this.refs.Custom_Currency_Price).value.trim();\n      var reward = ReactDOM.findDOMNode(_this.refs.Custom_Currency_Reward).value.trim();\n      var total_hash = ReactDOM.findDOMNode(_this.refs.Custom_Currency_Total_Hash).value.trim();\n      var block_time = ReactDOM.findDOMNode(_this.refs.Custom_Currency_Block_Time).value.trim();\n      var color = ReactDOM.findDOMNode(_this.refs.Custom_Currency_Color).value.trim();\n      if (name == null || name.length < 3) alert(\"Currency name must be atleast 3 characters.\");else if (symbol == null || symbol.length < 3 || symbol.length > 5) alert(\"Currency symbol must be between 3 and 5 characters.\");else if (algo == null || algo.length < 3) alert(\"Please enter a valid mining algorithm.\");else if (price == \"\" || isNaN(price) || price < 0) alert(\"Please enter a valid currency price.\");else if (reward == \"\" || isNaN(reward) || reward < 0) alert(\"Please enter a valid currency block reward.\");else if (total_hash == null || isNaN(total_hash) || total_hash < 0 || total_hash == 0) alert(\"Please enter a valid total hash rate.\");else if (block_time == null || isNaN(block_time) || block_time < 0 || block_time == 0) alert(\"Please enter a valid block time.\");else if (color == null || color.length < 4) alert(\"Please enter a valid hex color code\");else {\n        total_hash = _this.convertHash(total_hash, ReactDOM.findDOMNode(_this.refs.Custom_Currency_Conversion).value.trim());\n        cs[symbol] = {\n          name: name,\n          prices: {\n            USD: price\n          },\n          block_reward: reward,\n          block_time: block_time,\n          algo: algo,\n          total_hash: total_hash,\n          color: color,\n          checked: false\n        };\n\n        _this.setState({\n          currencies: cs\n        });\n\n        _this.setState({\n          showCustomCurrencyOptions: false\n        });\n      }\n    };\n\n    _this.onAddCurrencyCancel = function () {\n      _this.setState({\n        showCustomCurrencyOptions: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MainForm, [{\n    key: \"convertHash\",\n    value: function convertHash(hash, cond) {\n      if (hash < 0) hash = 0;else if (cond == \"TH/s\") hash *= 1000;else if (cond == \"PH/s\") hash *= 1000000;else if (cond == \"EH/s\") hash *= 1000000000;\n      return hash;\n    }\n    /* on submit button press, call solve from api depending on selections */\n\n  }, {\n    key: \"onCurrencyBoxChange\",\n\n    /* a currency checkbox is toggeled */\n    value: function onCurrencyBoxChange(name) {\n      var _this2 = this;\n\n      return function (event) {\n        var cs = _this2.state.currencies;\n        cs[name].checked = !cs[name].checked;\n\n        _this2.setState({\n          currencies: cs\n        });\n\n        var isMultiA = false;\n        var isMultiC = false;\n        var c = 0;\n        var lastAlgo = null;\n\n        for (var n in _this2.state.currencies) {\n          if (_this2.state.currencies[n].checked) {\n            if (lastAlgo == null) lastAlgo = _this2.state.currencies[n].algo;else if (lastAlgo != _this2.state.currencies[n].algo) isMultiA = true;\n            c++;\n          }\n        }\n\n        if (c > 1) isMultiC = true;\n\n        for (var n in _this2.state.pools) {\n          if (_this2.state.pools[n].currency == name) {\n            _this2.state.pools[n].show = cs[name].checked;\n            _this2.state.pools[n].checked = false;\n          }\n        }\n\n        _this2.setState({\n          isMultiCurr: isMultiC,\n          isMultiAlgo: isMultiA\n        });\n      };\n    }\n    /* a pool checkbox is toggled */\n\n  }, {\n    key: \"onPoolBoxChange\",\n    value: function onPoolBoxChange(name) {\n      var _this3 = this;\n\n      return function (event) {\n        var ps = _this3.state.pools;\n        ps[name].checked = !ps[name].checked;\n\n        _this3.setState({\n          pools: ps\n        });\n      };\n    }\n    /* on initial load, load in currency and pool data from server api */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      /* load currency data from api into state */\n      fetch('http://smart-miner.com:5000/api/currencies').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        var cs = [];\n\n        for (var name in responseJson) {\n          cs[name] = responseJson[name];\n          cs[name].checked = false;\n        }\n\n        _this4.setState({\n          currencies: cs\n        });\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"There was an error contacting the server. Please inform the web admin.\");\n      });\n      /* load pool data from api into state */\n\n      fetch('http://smart-miner.com:5000/api/pools').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        var ps = [];\n\n        for (var name in responseJson) {\n          var n = name.replace(\"(dot)\", \".\");\n          ps[n] = responseJson[name];\n          ps[n].checked = false;\n          ps[n].show = false;\n        }\n\n        _this4.setState({\n          pools: ps\n        });\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"There was an error contacting the server. Please inform the web admin.\");\n      });\n      /* load algo data from api into state */\n\n      fetch('http://smart-miner.com:5000/api/algos').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this4.setState({\n          algos: responseJson\n        });\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"There was an error contacting the server. Please inform the web admin.\");\n      });\n    }\n    /* actual rendered form */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      // load select forms with proper elements from state\n      var currency_select = [];\n\n      for (var n in this.state.currencies) {\n        currency_select.push(React.createElement(\"option\", {\n          key: n,\n          value: n,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506\n          },\n          __self: this\n        }, n));\n      }\n\n      var algo_select = [];\n\n      for (var n in this.state.algos) {\n        algo_select.push(React.createElement(\"option\", {\n          key: n,\n          value: n,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509\n          },\n          __self: this\n        }, n));\n      }\n\n      var shown_custom_pool_component = React.createElement(FormGroup, {\n        controlId: \"custom_pool_elements\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, \"Pool Name\")), React.createElement(\"div\", {\n        className: \"narrow-form1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-margined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, \"Fee (%)\")))), React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        ref: \"Custom_Pool_Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"narrow-form1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-margined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        ref: \"Custom_Pool_Fee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }), React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, \"Hash Power\"), React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        ref: \"Custom_Pool_Hash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"hash-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        componentClass: \"select\",\n        placeholder: \"GH/s\",\n        ref: \"Custom_Pool_Conversion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"GH/s\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, \"GH/s\"), React.createElement(\"option\", {\n        value: \"TH/s\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, \"TH/s\"), React.createElement(\"option\", {\n        value: \"PH/s\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, \"PH/s\"), React.createElement(\"option\", {\n        value: \"EH/s\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, \"EH/s\"))), \" \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, \"Currency\")), React.createElement(\"div\", {\n        className: \"narrow-form1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-margined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, \"PPS\")))), React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        componentClass: \"select\",\n        placeholder: \"BTC\",\n        ref: \"Custom_Pool_Currency\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, currency_select)), React.createElement(\"div\", {\n        className: \"hash-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        componentClass: \"select\",\n        placeholder: \"false\",\n        ref: \"Custom_Pool_PPS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"no\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, \"False\"), React.createElement(\"option\", {\n        value: \"yes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, \"True\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this5.onAddPoolConfirm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, \" Add Pool\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this5.onAddPoolCancel();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, \" Cancel\"));\n      var hidden_custom_pool_component = React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, React.createElement(OverlayTrigger, {\n        trigger: \"hover\",\n        placement: \"top\",\n        overlay: React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 556\n          },\n          __self: this\n        }, \"add a custom pool\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this5.onAddPool();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, \" Add Pool\")));\n      /* add pool element to add new pool */\n\n      var add_pool_component = hidden_custom_pool_component;\n      if (this.state.showCustomPoolOptions) add_pool_component = shown_custom_pool_component;\n      var shown_custom_currency_component = React.createElement(FormGroup, {\n        controlId: \"custom_pool_elements\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, \"Currency Name\")), React.createElement(\"div\", {\n        className: \"narrow-form2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"left-margined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, \" \", React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, \"Symbol\"), \" \"), \" \")), React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, \" \", React.createElement(FormControl, {\n        type: \"text\",\n        ref: \"Custom_Currency_Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"narrow-form1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"left-margined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, \" \", React.createElement(FormControl, {\n        type: \"text\",\n        ref: \"Custom_Currency_Symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      })))), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, \"Price (USD)\")), React.createElement(OverlayTrigger, {\n        trigger: \"hover\",\n        placement: \"top\",\n        overlay: React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578\n          },\n          __self: this\n        }, \"coins rewarded per block\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"left-margined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, \" \", React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, \"Reward (Coins)\"), \" \"), \" \"))), React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, \" \", React.createElement(FormControl, {\n        type: \"text\",\n        ref: \"Custom_Currency_Price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"narrow-form1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"left-margined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, \" \", React.createElement(FormControl, {\n        type: \"text\",\n        ref: \"Custom_Currency_Reward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, \"Mining Algorithm\")), React.createElement(\"div\", {\n        className: \"left-margined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, \"Block Time (secs)\")))), React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        componentClass: \"select\",\n        placeholder: \"SHA-256\",\n        ref: \"Custom_Currency_Algo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, algo_select)), React.createElement(\"div\", {\n        className: \"narrow-form1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-margined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        ref: \"Custom_Currency_Block_Time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"narrow-form3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, \"Currency Total Hash Rate\")), React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        ref: \"Custom_Currency_Total_Hash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"hash-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        componentClass: \"select\",\n        placeholder: \"GH/s\",\n        ref: \"Custom_Currency_Conversion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"GH/s\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, \"GH/s\"), React.createElement(\"option\", {\n        value: \"TH/s\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, \"TH/s\"), React.createElement(\"option\", {\n        value: \"PH/s\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, \"PH/s\"), React.createElement(\"option\", {\n        value: \"EH/s\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, \"EH/s\"))), \" \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"narrow-form1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, \"Currency Color\")), React.createElement(\"div\", {\n        className: \"narrow-form1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        componentClass: \"select\",\n        placeholder: \"GH/s\",\n        ref: \"Custom_Currency_Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"#100c08\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }, \"Black\"), React.createElement(\"option\", {\n        value: \"#4682b4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, \"Blue\"), React.createElement(\"option\", {\n        value: \"#a67b5b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      }, \"Brown\"), React.createElement(\"option\", {\n        value: \"#b1b3b0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        },\n        __self: this\n      }, \"Gray\"), React.createElement(\"option\", {\n        value: \"#2bd849\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }, \"Green\"), React.createElement(\"option\", {\n        value: \"#ed872d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, \"Orange\"), React.createElement(\"option\", {\n        value: \"#ff9ecb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, \"Pink\"), React.createElement(\"option\", {\n        value: \"#8a2be2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }, \"Purple\"), React.createElement(\"option\", {\n        value: \"#cf0000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, \"Red\"), React.createElement(\"option\", {\n        value: \"#eff676\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }, \"Yellow\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this5.onAddCurrencyConfirm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, \" Add Currency\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this5.onAddCurrencyCancel();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }, \" Cancel\"));\n      var hidden_custom_currency_component = React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }, React.createElement(OverlayTrigger, {\n        trigger: \"hover\",\n        placement: \"top\",\n        overlay: React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 631\n          },\n          __self: this\n        }, \"add a custom currency\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this5.onAddCurrency();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }, \" Add Currency\")));\n      var hash_component = [];\n\n      if (!this.state.isMultiAlgo) {\n        hash_component = React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 639\n          },\n          __self: this\n        }, React.createElement(ControlLabel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 640\n          },\n          __self: this\n        }, \"Your Hash Power\"), React.createElement(\"div\", {\n          className: \"inline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 641\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"narrow-form3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 642\n          },\n          __self: this\n        }, \" \", React.createElement(FormControl, {\n          inline: true,\n          type: \"text\",\n          ref: \"Hash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 642\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"hash-select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 643\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          componentClass: \"select\",\n          placeholder: \"GH/s\",\n          ref: \"Hash_Conversion\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 644\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"GH/s\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 645\n          },\n          __self: this\n        }, \"GH/s\"), React.createElement(\"option\", {\n          value: \"TH/s\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 646\n          },\n          __self: this\n        }, \"TH/s\"), React.createElement(\"option\", {\n          value: \"PH/s\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 647\n          },\n          __self: this\n        }, \"PH/s\"))), \" \"), React.createElement(HelpBlock, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 650\n          },\n          __self: this\n        }, \"Your total mining hash power.\"));\n      } else {\n        var algos = [];\n\n        for (var n in this.state.currencies) {\n          if (this.state.currencies[n].checked && algos.indexOf(this.state.currencies[n].algo) < 0) algos.push(this.state.currencies[n].algo);\n        }\n\n        for (var a in algos) {\n          var name = \"Hash_\" + algos[a];\n          var conversion = \"Hash_Conversion_\" + algos[a];\n          hash_component.push(React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 663\n            },\n            __self: this\n          }, React.createElement(ControlLabel, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 664\n            },\n            __self: this\n          }, \"Your Hash Power for \", algos[a]), React.createElement(\"div\", {\n            className: \"inline\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 665\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"narrow-form3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 666\n            },\n            __self: this\n          }, \" \", React.createElement(FormControl, {\n            inline: true,\n            type: \"text\",\n            ref: name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 666\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"hash-select\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 667\n            },\n            __self: this\n          }, React.createElement(FormControl, {\n            componentClass: \"select\",\n            placeholder: \"GH/s\",\n            ref: conversion,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 668\n            },\n            __self: this\n          }, \" //TODO ON CHANGE METHOD\", React.createElement(\"option\", {\n            value: \"GH/s\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 669\n            },\n            __self: this\n          }, \"GH/s\"), React.createElement(\"option\", {\n            value: \"TH/s\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 670\n            },\n            __self: this\n          }, \"TH/s\"), React.createElement(\"option\", {\n            value: \"PH/s\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 671\n            },\n            __self: this\n          }, \"PH/s\"))), \" \"), React.createElement(HelpBlock, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 674\n            },\n            __self: this\n          }, \"Your mining hash power for \", algos[a], \".\")));\n        }\n      }\n\n      var add_currency_component = hidden_custom_currency_component;\n      if (this.state.showCustomCurrencyOptions) add_currency_component = shown_custom_currency_component;\n      var cnt1 = 0;\n      var currency_boxes = [];\n\n      for (var name in this.state.currencies) {\n        currency_boxes.push(React.createElement(React.Fragment, null, React.createElement(Checkbox, {\n          inline: true,\n          id: name,\n          checked: this.state.currencies[name].checked,\n          onChange: this.onCurrencyBoxChange(name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 688\n          },\n          __self: this\n        }, \" \", name, \" \")));\n        cnt1++;\n\n        if (cnt1 == 5) {\n          currency_boxes.push(React.createElement(React.Fragment, null, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 696\n            },\n            __self: this\n          })));\n          cnt1 = 0;\n        } // move to new line after 5 elements for formatting\n\n      }\n\n      var cnt2 = 0;\n      var pool_boxes = [];\n\n      for (var name in this.state.pools) {\n        if (this.state.pools[name].show == true) {\n          pool_boxes.push(React.createElement(React.Fragment, null, \" \", React.createElement(Checkbox, {\n            inline: true,\n            id: name,\n            checked: this.state.pools[name].checked,\n            onChange: this.onPoolBoxChange(name),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 703\n            },\n            __self: this\n          }, \" \", name, \" \")));\n          cnt2++;\n        }\n\n        if (cnt2 == 2) {\n          pool_boxes.push(React.createElement(React.Fragment, null, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 710\n            },\n            __self: this\n          })));\n          cnt2 = 0;\n        } // move to new line after 3 elements for formatting\n\n      }\n\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        },\n        __self: this\n      }, \"Currencies\"), React.createElement(FormGroup, {\n        controlId: \"currencies\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }, \" \", React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }, currency_boxes), \" \"), add_currency_component, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720\n        },\n        __self: this\n      }, \"Mining Pools\"), React.createElement(FormGroup, {\n        controlId: \"pools\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }, \" \", React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }, pool_boxes), \" \"), add_pool_component, hash_component, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727\n        },\n        __self: this\n      }, React.createElement(OverlayTrigger, {\n        trigger: \"hover\",\n        placement: \"top\",\n        overlay: React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 728\n          },\n          __self: this\n        }, \"risk factor of inconsistent reward\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"narrow-form2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }, \" \", React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }, \"Risk Aversion\"))), React.createElement(\"div\", {\n        className: \"narrow-form2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731\n        },\n        __self: this\n      }, \" \", React.createElement(FormControl, {\n        type: \"text\",\n        ref: \"Risk\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731\n        },\n        __self: this\n      })), React.createElement(HelpBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732\n        },\n        __self: this\n      }, \"Suggested range 1-10.\")), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this5.onSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735\n        },\n        __self: this\n      }, \" Submit \"));\n    }\n  }]);\n\n  return MainForm;\n}(Component);\n\nexport { MainForm as default };","map":{"version":3,"sources":["/home/pchatzig/Desktop/optmining/src/components/MainForm.jsx"],"names":["React","Component","Home","Link","OverlayTrigger","Tooltip","Form","FormGroup","FormControl","ControlLabel","HelpBlock","Checkbox","Button","ButtonToolbar","DropdownButton","MenuItem","Radio","exec","ReactDOM","MainForm","state","currencies","pools","algos","showCustomPoolOptions","showCustomCurrencyOptions","isMultiCurr","isMultiAlgo","onSubmit","risk","hash","conversion","pps","error","pps_pool","selected_currencies","selected_pools","colors","n","checked","color","length","fee","push","indexOf","algo","findDOMNode","refs","Risk","value","trim","isNaN","alert","Hash","Hash_Conversion","a","hash_name","conv_name","convertHash","name","poolData","data","curr","Object","keys","reward","block_reward","prices","USD","substring","console","log","fetch","method","headers","body","JSON","stringify","rho","R","lA","PPS","then","response","json","responseData","hashes","parseResponse","i","val","Math","round","Number","props","updateResults","catch","found_currencies","currency","block_time","total_hash","fake_pools","formatData","c","h","check","solved","replace","split","splice","d","onAddPool","setState","onAddPoolConfirm","ps","Custom_Pool_Currency","Custom_Pool_Name","Custom_Pool_Hash","Custom_Pool_Fee","Custom_Pool_Conversion","Custom_Pool_PPS","show","onAddPoolCancel","onAddCurrency","onAddCurrencyConfirm","cs","Custom_Currency_Name","symbol","Custom_Currency_Symbol","Custom_Currency_Algo","price","Custom_Currency_Price","Custom_Currency_Reward","Custom_Currency_Total_Hash","Custom_Currency_Block_Time","Custom_Currency_Color","Custom_Currency_Conversion","onAddCurrencyCancel","cond","event","isMultiA","isMultiC","lastAlgo","responseJson","currency_select","algo_select","shown_custom_pool_component","hidden_custom_pool_component","add_pool_component","shown_custom_currency_component","hidden_custom_currency_component","hash_component","add_currency_component","cnt1","currency_boxes","onCurrencyBoxChange","cnt2","pool_boxes","onPoolBoxChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Home from './Home'\nimport { Link } from 'react-router-dom';\nimport { OverlayTrigger, Tooltip, Form, FormGroup, FormControl, ControlLabel, HelpBlock, Checkbox, Button, ButtonToolbar, DropdownButton, MenuItem, Radio } from 'react-bootstrap';\nimport './MainForm.css';\nimport exec from 'child_process';\nimport ReactDOM from 'react-dom';\n\nexport default class MainForm extends Component {\n\tstate = {\n\t\tcurrencies: {}, // all pulled currencies from API and user's entered custom currencies\n\t\tpools: {}, // all pulled pools from API and user's entered custom pools\n\t\talgos: {}, // all pulled algorithm data from API\n\t\tshowCustomPoolOptions: false, // if true show options for adding a custom pool, otherwise show the \"add pool\" button\n\t\tshowCustomCurrencyOptions: false, // if true show options for adding a custom currency, otherwise show the \"add currency\" button\n\t\tisMultiCurr: false, // checks if selected currencies are more than one currency\n\t\tisMultiAlgo: false // checks if selected currencies are multi-algorithm or not\n\t}\n\n\tconvertHash(hash, cond) {\n\t\tif(hash < 0)\n\t\t\thash = 0;\n\t\telse if(cond == \"TH/s\")\n\t\t\thash *= 1000;\n\t\telse if(cond == \"PH/s\")\n\t\t\thash *= 1000000;\n\t\telse if(cond == \"EH/s\")\n\t\t\thash *= 1000000000;\n\t\treturn hash;\n\t}\n\n\t/* on submit button press, call solve from api depending on selections */\n\tonSubmit = () => {\n\t\tvar risk;\n\t\tvar hash;\n\t\tvar conversion;\n\t\tvar pps;\n\t\tvar error = false;\n\n\t\t/* find all selected currencies and pools */\n\t\tvar pps_pool = [];\n\t\tvar algos = [];\n\t\tvar selected_currencies = {};\n\t\tvar selected_pools = {};\n\t\tvar colors = {};\n\n\t\tfor(var n in this.state.currencies)\n\t\t\tif(this.state.currencies[n].checked) {\n\t\t\t\tselected_currencies[n] = this.state.currencies[n];\n\t\t\t\tcolors[n] = this.state.currencies[n].color;\n\t\t\t}\n\n\t\tfor(var n in this.state.pools)\n\t\t\tif(this.state.pools[n].checked)\n\t\t\t\t\tif(!this.state.pools[n].pps)\n\t\t\t\t\t\tselected_pools[n] = this.state.pools[n];\n\t\t\t\t\telse { // skip pps pool for now\n\t\t\t\t\t\tif(pps_pool.length == 0 || this.state.pools[pps_pool[0]].fee > this.state.pools[n].fee)\n\t\t\t\t\t\t\tpps_pool.push(n);\n\t\t\t\t\t}\n\n\t\tif(this.state.isMultiAlgo) {\n\t\t\tfor(var n in this.state.currencies)\n\t\t\t\tif(this.state.currencies[n].checked && algos.indexOf(this.state.currencies[n].algo) < 0)\n\t\t\t\t\talgos.push(this.state.currencies[n].algo);\n\t\t}\n\n\t\t// calculate and check risk\n\t\trisk = ReactDOM.findDOMNode(this.refs.Risk).value.trim();\n\t\trisk = risk*0.0001;\n\t\tif(risk == 0)\n\t\t\trisk = 0.0000000000001;\n\t\tif(risk == \"\" || isNaN(risk) || risk < 0) {\n\t\t\talert(\"Please enter a valid risk value.\");\n\t\t\terror = true;\n\t\t}\n\n\t\t// calculate and check hash and conversion\n\t\tif(!this.state.isMultiAlgo) {\n\t\t\thash = ReactDOM.findDOMNode(this.refs.Hash).value.trim();\n\t\t\tconversion = ReactDOM.findDOMNode(this.refs.Hash_Conversion).value.trim();\n\t\t\tif(hash == \"\" || isNaN(hash) || hash < 0 || hash > 99999999999) {\n\t\t\t\talert(\"Please enter a valid hash power.\");\n\t\t\t\terror = true;\n\t\t\t}\n\t\t}\n\t\telse { // multi-algorithm\n\t\t\thash = {};\n\t\t\tconversion = {};\n\t\t\tfor(var a in algos) {\n\t\t\t\tvar hash_name = \"Hash_\"+algos[a];\n\t\t\t\tvar conv_name = \"Hash_Conversion_\"+algos[a];\n\t\t\t\thash[algos[a]] = ReactDOM.findDOMNode(this.refs[hash_name]).value.trim();\n\t\t\t\tconversion[algos[a]] = ReactDOM.findDOMNode(this.refs[conv_name]).value.trim();\n\t\t\t\tif(hash[algos[a]] == \"\" || isNaN(hash[algos[a]]) || hash[algos[a]] < 0 || hash[algos[a]] > 99999999999) {\n\t\t\t\t\talert(\"Please enter a valid hash power for each algorithm.\");\n\t\t\t\t\terror = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// convert hash / hashes if needed\n\t\tif(!this.state.isMultiAlgo)\n\t\t\thash = this.convertHash(hash, ReactDOM.findDOMNode(this.refs.Hash_Conversion).value.trim());\n\t\telse\n\t\t\tfor(var a in algos) {\n\t\t\t\tvar name = \"Hash_Conversion_\"+algos[a];\n\t\t\t\thash[algos[a]] = this.convertHash(hash[algos[a]], ReactDOM.findDOMNode(this.refs[name]).value.trim())\n\t\t\t}\n\n\t\t// add PPS pool last if exists\n\t\tpps = (pps_pool.length > 0);\n\t\tif(pps)\n\t\t\tselected_pools[n] = this.state.pools[pps_pool[0]];\n\n\t\t/**** send to optimize and forward results to Return.jsx **********/\n\t\tvar poolData = '';\n\t\tvar data = [];\n\n\t\t/****************************** SINGLE CURRENCY SOLVE ******************************/\n\t\tif(!this.state.isMultiCurr && !this.state.isMultiAlgo) { // single currency\n\t\t\t\tvar curr = this.state.currencies[Object.keys(selected_currencies)[0]];\n\t\t\t\tvar reward = curr.block_reward*curr.prices.USD;\n\n\t\t\t\t/* format all data arguments for optimize */\n\t\t\t\tfor(var name in selected_pools)\n\t\t\t\t\tpoolData += selected_pools[name].hash+','+selected_pools[name].fee+',';\n\t\t\t\tpoolData = poolData.substring(0, poolData.length-1); // remove last ,\n\n\t\t\t\tfor(var n in selected_pools)\n\t\t\t\t\tdata.push({name: n});\n\t\t\t\tdata.push({name: \"Solo\"});\n\n\t\t\t\tconsole.log(poolData);\n\t\t\t\tfetch('http://smart-miner.com:5000/solve/single', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t  'Accept': 'application/json',\n\t\t\t\t\t  'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t  pools: poolData,\n\t\t\t\t\t  rho: risk, //risk aversion\n\t\t\t\t\t  R: reward, //block reward\n\t\t\t\t\t  lA: hash, //hash power\n\t\t\t\t\t\tPPS: pps // boolean if pps pool is included\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.then((response) => response.json())\n\t\t    .then((responseData) => {\n\t\t\t\t\tconsole.log('solved singlecurr optimization: ' + JSON.stringify(responseData));\n\t\t\t\t\t\t\t\tvar conversion = ReactDOM.findDOMNode(this.refs.Hash_Conversion).value.trim();\n\t\t\t\t\t\t\t\tvar hashes = this.parseResponse(responseData);\n\n\t\t\t\t\t\t\t\t/* maps the hash rates to their respective pools */\n\t\t\t\t\t\t\t\tvar i = 0;\n\t\t\t\t\t\t\t\twhile(i < hashes.length) {\n\t\t\t\t\t\t\t\t\tvar val = hashes[i];\n\t\t\t\t\t\t\t\t\tif(val < 0) val = 0;\n\t\t\t\t\t\t\t\t\tif(conversion == \"TH/s\")\tval /= 1000;\n\t\t\t\t\t\t\t\t\telse if(conversion == \"PH/s\") val /= 1000000;\n\t\t\t\t\t\t\t\t\tval = Math.round(Number(val)*100)/100;\n\t\t\t\t\t\t\t\t\tdata[i][\"Hash Power\"] = val;\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/* send results graph data */\n\t\t\t\t\t\t\t\tthis.props.updateResults(\"single\", data, {\"Hash Power\": \"#82ca9d\"}, selected_currencies, selected_pools);\n\t\t    }).catch((error) => {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert(\"There was an error contacting the server. Please inform the web admin.\");\n\t\t\t\t});\n\t\t}\n\n\t\t/****************************** MULTI CURRENCY SOLVE ******************************/\n\t\telse if(!this.state.isMultiAlgo) {\n\t\t\t/* format all data arguments for optimize */\n\t\t\tvar found_currencies = [];\n\t\t\tfor(var n in selected_pools) {\n\t\t\t\tvar curr = this.state.currencies[selected_pools[n].currency];\n\t\t\t\tfound_currencies.push(selected_pools[n].currency);\n\t\t\t\tpoolData += selected_pools[n].hash+','+selected_pools[n].fee+','+curr.block_reward*curr.prices.USD+','+curr.block_time+','+curr.total_hash+',';\n\t\t\t}\n\n\t\t\t/* add fake pool for solo mine only currencies */\n\t\t\tvar fake_pools = 0;\n\t\t\tfor(var n in selected_currencies)\n\t\t\t\tif(found_currencies.indexOf(n) < 0) {\n\t\t\t\t\tvar curr = this.state.currencies[n];\n\t\t\t\t\tpoolData += 1000+','+0.99+','+curr.block_reward*curr.prices.USD+','+curr.block_time+','+curr.total_hash+',';\n\t\t\t\t\tfake_pools++;\n\t\t\t\t}\n\n\t\t\tpoolData = poolData.substring(0, poolData.length-1); // remove last ,\n\t\t\tconsole.log(poolData);\n\t\t  fetch('http://smart-miner.com:5000/solve/multicurr', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t  'Accept': 'application/json',\n\t\t\t\t  'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t  pools: poolData, //TODO FORMAT DATA FOR MULTICURR\n\t\t\t\t  rho: risk, //risk aversion\n\t\t\t\t  lA: hash, //hash power\n\t\t\t\t\tPPS: pps\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then((response) => response.json())\n\t    .then((responseData) => {\n\t\t\t\t\t\t\tconsole.log('solved multicurr optimization: ' + JSON.stringify(responseData));\n\t\t\t\t\t\t\tvar conversion = ReactDOM.findDOMNode(this.refs.Hash_Conversion).value.trim();\n\t\t\t\t\t\t\tvar hashes = this.parseResponse(responseData);\n\n\t\t\t\t\t\t  /* maps the hash rates to their respective pools */\n\t\t\t\t\t\t\tvar i = 0;\n\t\t\t\t\t\t\tfor(var name in selected_pools) {\n\t\t\t\t\t\t\t\tdata.push(this.formatData(selected_pools[name].currency, name, hashes[i], conversion));\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// skip over fake pools\n\t\t\t\t\t\t\twhile(fake_pools > 0) {\n\t\t\t\t\t\t\t\tfake_pools--;\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* map left over values as solos */\n\t\t\t\t\t\t\tfor(var c in selected_currencies) {\n\t\t\t\t\t\t\t\tif(i < hashes.length) {\n\t\t\t\t\t\t\t\t\tdata.push(this.formatData(c, 'Solo '+ c, hashes[i], conversion));\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* send results graph data */\n\t\t\t\t\t\t\tthis.props.updateResults(\"multicurr\", data, colors, selected_currencies, selected_pools);\n\t    }).catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t\talert(\"There was an error contacting the server. Please inform the web admin.\");\n\t\t\t});\n\t\t}\n\n\t\t/****************************** MULTI ALGO SOLVE ******************************/\n\t\telse {\n\t\t\t/* format all data arguments for optimize */\n\t\t\tvar found_currencies = [];\n\t\t\tfor(var n in selected_pools) {\n\t\t\t\tvar curr = this.state.currencies[selected_pools[n].currency];\n\t\t\t\tvar h = hash[curr.algo];\n\t\t\t\tfound_currencies.push(selected_pools[n].currency);\n\t\t\t\tpoolData += selected_pools[n].hash+','+selected_pools[n].fee+','+curr.block_reward*curr.prices.USD+','+curr.block_time+','+curr.total_hash+','+h+',';\n\t\t\t}\n\n\t\t\t/* add fake pool for solo mine only currencies */\n\t\t\tvar fake_pools = 0;\n\t\t\tfor(var n in selected_currencies)\n\t\t\t\tif(found_currencies.indexOf(n) < 0) {\n\t\t\t\t\tvar curr = this.state.currencies[n];\n\t\t\t\t\tvar h = hash[curr.algo];\n\t\t\t\t\tpoolData += 1000+','+0.99+','+curr.block_reward*curr.prices.USD+','+curr.block_time+','+curr.total_hash+','+h+',';\n\t\t\t\t\tfake_pools++;\n\t\t\t}\n\n\t\t\tpoolData = poolData.substring(0, poolData.length-1); // remove last ,\n\t\t\tconsole.log(poolData);\n\t\t\tfetch('http://smart-miner.com:5000/solve/multialgo', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t  'Accept': 'application/json',\n\t\t\t\t  'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t  pools: poolData, // pool data\n\t\t\t\t  rho: risk, //risk aversion\n\t\t\t\t\tPPS: pps\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then((response) => response.json())\n\t    .then((responseData) => {\n\t\t\t\tconsole.log('solved multialgo optimization: ' + JSON.stringify(responseData));\n\t\t\t\tvar hashes = this.parseResponse(responseData);\n\n\t\t\t\t/* finds highest conversion rate used for hash rates */\n\t\t\t\tvar conversion;\n\t\t\t\tfor(var a in algos) {\n\t\t\t\t\tvar check = ReactDOM.findDOMNode(this.refs[\"Hash_Conversion_\"+algos[a]]).value.trim();\n\t\t\t\t\tif(conversion == null || conversion == \"GH/s\")\n\t\t\t\t\t\tconversion = check;\n\t\t\t\t\telse if(conversion == \"TH/s\" && check == \"PH/s\")\n\t\t\t\t\t\tconversion = check;\n\t\t\t\t}\n\n\t\t\t\t/* maps the hash rates to their respective pools */\n\t\t\t\tvar i = 0;\n\t\t\t\tfor(var name in selected_pools) {\n\t\t\t\t\tvar c = selected_pools[name].currency;\n\t\t\t\t\tdata.push(this.formatData(c, name, hashes[i], conversion));\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\t// skip over fake pools\n\t\t\t\twhile(fake_pools > 0) {\n\t\t\t\t\tfake_pools--;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\t/* map left over values as solos */\n\t\t\t\tfor(var c in selected_currencies) {\n\t\t\t\t\tif(i < hashes.length) {\n\t\t\t\t\t\tdata.push(this.formatData(c, 'Solo '+c, hashes[i], conversion));\n\t\t\t\t  \ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* send results graph data */\n\t\t\t\tthis.props.updateResults(\"multialgo\", data, colors, selected_currencies, selected_pools);\n\t    }).catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t\talert(\"There was an error contacting the server. Please inform the web admin.\");\n\t\t\t});\n\t\t}\n\t}\n\n\t/* format data returned from optimize.py into array of hash rates */\n\tparseResponse = (responseData) => {\n\t\tresponseData = (responseData.solved).replace('[','').replace(']','').replace('\\n','');\n\t\tvar hashes = responseData.split(' ');\n\t\tfor(var i = hashes.length - 1; i >= 0; i--)\n\t\t\t\tif(hashes[i].length < 2)\n\t\t\t\t\t hashes.splice(i, 1);\n\t\treturn hashes;\n\t}\n\n\tformatData = (curr, name, val, conversion) => {\n\t\t  if(val < 0) val = 0;\n\t\t\tif(conversion == \"TH/s\")\tval /= 1000;\n\t\t\telse if(conversion == \"PH/s\") val /= 1000000;\n\t\t\tval = Math.round(Number(val)*100)/100;\n\t\t\tvar d = {name:name};\n\t\t\td[curr] = val;\n\t\t\treturn d;\n\t}\n\n\t/* button asking to add custom pool */\n\tonAddPool = () => { this.setState({showCustomPoolOptions: true}) }\n\n\t/* button to add custom pool/confirm custom pool */\n\tonAddPoolConfirm = () => {\n\t\tvar ps = this.state.pools;\n\t\tvar curr = ReactDOM.findDOMNode(this.refs.Custom_Pool_Currency).value.trim();\n\t\tvar name = ReactDOM.findDOMNode(this.refs.Custom_Pool_Name).value.trim();\n\t\tvar hash = ReactDOM.findDOMNode(this.refs.Custom_Pool_Hash).value.trim();\n\t\tvar fee = ReactDOM.findDOMNode(this.refs.Custom_Pool_Fee).value.trim()/100;\n\t\tvar conversion = ReactDOM.findDOMNode(this.refs.Custom_Pool_Conversion).value.trim();\n\t\tvar pps = ReactDOM.findDOMNode(this.refs.Custom_Pool_PPS).value.trim() == 'yes';\n\n\t\t// do error checking all inputs for custom pool\n\t\tif(name == null || name.length < 3) alert(\"Custom pool name must be atleast 3 characters.\");\n\t\telse if(hash == \"\" || isNaN(hash) || hash < 0 || hash > 99999999999) alert(\"Please enter a valid pool hash power.\");\n\t\telse if(conversion.length < 1) alert(\"Please select a pool hash power unit.\");\n\t\telse if(curr == \"\") alert(\"Please select a currency that the pool mines.\");\n\t\telse if(fee == \"\" || isNaN(fee) || fee < 0 || fee > 1) alert(\"Please enter a valid pool fee.\");\n\n\t\telse {\n\t\t\tvar show = this.state.currencies[curr].checked;\n\t\t\tname += \" (\"+curr+\")\";\n\t\t\thash = this.convertHash(hash, conversion);\n\t\t\tps[name] = {hash:hash, fee:fee, currency:curr, pps:pps, show:show, checked:false};\n\t\t\tthis.setState({pools: ps});\n\t\t\tthis.setState({showCustomPoolOptions: false});\n\t\t}\n\t}\n\n\t/* button to cancel adding a custom pool */\n\tonAddPoolCancel = () => {\n\t\tthis.setState({showCustomPoolOptions: false});\n\t}\n\n  /* button asking to add custom currency */\n\tonAddCurrency = () => { this.setState({showCustomCurrencyOptions: true}) }\n\n\t/* button to add custom pool/confirm custom pool */\n\tonAddCurrencyConfirm = () => {\n\t\tvar cs = this.state.currencies;\n\t\tvar name = ReactDOM.findDOMNode(this.refs.Custom_Currency_Name).value.trim();\n\t\tvar symbol = ReactDOM.findDOMNode(this.refs.Custom_Currency_Symbol).value.trim();\n\t\tvar algo = ReactDOM.findDOMNode(this.refs.Custom_Currency_Algo).value.trim();\n\t\tvar price = ReactDOM.findDOMNode(this.refs.Custom_Currency_Price).value.trim();\n\t\tvar reward = ReactDOM.findDOMNode(this.refs.Custom_Currency_Reward).value.trim();\n\t\tvar total_hash = ReactDOM.findDOMNode(this.refs.Custom_Currency_Total_Hash).value.trim();\n\t\tvar block_time = ReactDOM.findDOMNode(this.refs.Custom_Currency_Block_Time).value.trim();\n\t\tvar color = ReactDOM.findDOMNode(this.refs.Custom_Currency_Color).value.trim();\n\n\t\tif(name == null || name.length < 3) alert(\"Currency name must be atleast 3 characters.\");\n\t\telse if(symbol == null || symbol.length < 3 || symbol.length > 5) alert(\"Currency symbol must be between 3 and 5 characters.\");\n\t\telse if(algo == null || algo.length < 3) alert(\"Please enter a valid mining algorithm.\");\n\t\telse if(price == \"\" || isNaN(price) || price < 0) alert(\"Please enter a valid currency price.\");\n\t\telse if(reward == \"\" || isNaN(reward) || reward < 0) alert(\"Please enter a valid currency block reward.\");\n\t\telse if(total_hash == null || isNaN(total_hash) || total_hash < 0 || total_hash == 0) alert(\"Please enter a valid total hash rate.\");\n\t\telse if(block_time == null || isNaN(block_time) || block_time < 0 || block_time == 0) alert(\"Please enter a valid block time.\");\n\t\telse if(color == null || color.length < 4) alert(\"Please enter a valid hex color code\");\n\n\t\telse {\n\t\t\t\ttotal_hash = this.convertHash(total_hash, ReactDOM.findDOMNode(this.refs.Custom_Currency_Conversion).value.trim());\n\t\t\t\tcs[symbol] = {name:name, prices:{USD: price}, block_reward:reward, block_time:block_time, algo:algo, total_hash:total_hash, color:color, checked:false};\n\t\t\t\tthis.setState({currencies: cs});\n\t\t\t\tthis.setState({showCustomCurrencyOptions: false});\n\t\t}\n\t}\n\n\t/* button to cancel adding a custom pool */\n\tonAddCurrencyCancel = () => {\n\t\tthis.setState({showCustomCurrencyOptions: false});\n\t}\n\n\t/* a currency checkbox is toggeled */\n\tonCurrencyBoxChange(name) {\n\t\treturn (event) => {\n\t\t\tvar cs = this.state.currencies;\n\t\t\tcs[name].checked = !cs[name].checked;\n\t\t\tthis.setState({currencies: cs});\n\n\t\t\tvar isMultiA = false;\n\t\t\tvar isMultiC = false;\n\n\t\t\tvar c = 0;\n\t\t\tvar lastAlgo = null;\n\n\t\t\tfor(var n in this.state.currencies)\n\t\t\t\tif(this.state.currencies[n].checked) {\n\t\t\t\t\tif(lastAlgo == null) lastAlgo = this.state.currencies[n].algo;\n\t\t\t\t\telse if(lastAlgo != this.state.currencies[n].algo) isMultiA = true;\n\t\t\t\t\tc++;\n\t\t\t\t}\n\t\t\tif(c > 1) isMultiC = true;\n\n\t\t\tfor(var n in this.state.pools)\n\t\t\t\tif(this.state.pools[n].currency == name) {\n\t\t\t\t\tthis.state.pools[n].show = cs[name].checked;\n\t\t\t\t\tthis.state.pools[n].checked = false;\n\t\t\t\t}\n\t\t\tthis.setState({isMultiCurr:isMultiC, isMultiAlgo:isMultiA});\n  \t}\n\t}\n\n\t/* a pool checkbox is toggled */\n\tonPoolBoxChange(name) {\n\t    return (event) => {\n\t\t\t\tvar ps = this.state.pools;\n\t\t\t\tps[name].checked = !ps[name].checked;\n\t\t\t\tthis.setState({pools: ps});\n  \t\t}\n  }\n\n\t/* on initial load, load in currency and pool data from server api */\n  componentDidMount() {\n\t\t\t/* load currency data from api into state */\n  \t\tfetch('http://smart-miner.com:5000/api/currencies')\n\t    .then((response) => response.json())\n\t    .then((responseJson) => {\n\t    \tvar cs = [];\n\t    \tfor(var name in responseJson) {\n\t    \t\tcs[name] = responseJson[name];\n\t    \t\tcs[name].checked = false;\n\t    \t}\n\t    \tthis.setState({currencies: cs})\n\t    }).catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t\talert(\"There was an error contacting the server. Please inform the web admin.\");\n\t\t\t});\n\n\t\t\t/* load pool data from api into state */\n\t   \tfetch('http://smart-miner.com:5000/api/pools')\n\t    .then((response) => response.json())\n\t    .then((responseJson) => {\n\t    \tvar ps = [];\n\t    \tfor(var name in responseJson) {\n\t    \t\tvar n = name.replace(\"(dot)\",\".\")\n\t    \t\tps[n] = responseJson[name];\n\t    \t\tps[n].checked = false;\n\t\t\t\t\tps[n].show = false;\n\t    \t}\n\t    \tthis.setState({pools: ps});\n\t    }).catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t\talert(\"There was an error contacting the server. Please inform the web admin.\");\n\t\t\t});\n\n\t\t\t/* load algo data from api into state */\n\t\t\tfetch('http://smart-miner.com:5000/api/algos')\n\t\t\t.then((response) => response.json())\n\t\t\t.then((responseJson) => {\n\t\t\t\tthis.setState({algos: responseJson});\n\t\t\t}).catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t\talert(\"There was an error contacting the server. Please inform the web admin.\");\n\t\t\t});\n  }\n\n\t/* actual rendered form */\n\trender() {\n\t\t// load select forms with proper elements from state\n\t\tlet currency_select = [];\n\t\tfor (var n in this.state.currencies)\n\t\t\t\t currency_select.push(<option key={n} value={n}>{n}</option>);\n\t  let algo_select = [];\n\t \tfor (var n in this.state.algos)\n\t \t \t\t algo_select.push(<option key={n} value={n}>{n}</option>);\n\n\t\tvar shown_custom_pool_component =\n\t\t\t<FormGroup controlId=\"custom_pool_elements\">\n\t\t\t\t<div className='inline'>\n\t\t\t\t<div className='narrow-form3'><ControlLabel>Pool Name</ControlLabel></div>\n\t\t\t\t<div className='narrow-form1'><div className='left-margined'><ControlLabel>Fee (%)</ControlLabel></div></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='inline'>\n\t\t\t\t<div className='narrow-form3'><FormControl type=\"text\" ref=\"Custom_Pool_Name\"/></div>\n\t\t\t\t<div className='narrow-form1'><div className='left-margined'><FormControl type=\"text\" ref=\"Custom_Pool_Fee\"/></div></div>\n\t\t\t\t</div><br/>\n\n\t\t\t\t<ControlLabel>Hash Power</ControlLabel>\n\t\t\t\t<div className='inline'>\n\t\t\t\t<div className='narrow-form3'><FormControl type=\"text\" ref=\"Custom_Pool_Hash\" /></div>\n\t\t\t\t<div className='hash-select'>\n\t\t\t\t<FormControl componentClass=\"select\" placeholder=\"GH/s\" ref=\"Custom_Pool_Conversion\">\n\t\t\t\t\t<option value=\"GH/s\">GH/s</option>\n\t\t\t\t\t<option value=\"TH/s\">TH/s</option>\n\t\t\t\t\t<option value=\"PH/s\">PH/s</option>\n\t\t\t\t\t<option value=\"EH/s\">EH/s</option>\n\t\t\t\t</FormControl>\n\t\t\t\t</div> </div> <br />\n\n\t\t\t\t<div className='inline'>\n\t\t\t\t<div className='narrow-form2'><ControlLabel>Currency</ControlLabel></div>\n\t\t\t\t<div className='narrow-form1'><div className='left-margined'><ControlLabel>PPS</ControlLabel></div></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='inline'>\n\t\t\t\t<div className='narrow-form2'>\n\t\t\t\t<FormControl componentClass=\"select\" placeholder=\"BTC\" ref=\"Custom_Pool_Currency\">\n\t\t\t\t\t\t{currency_select}\n\t\t\t\t</FormControl>\n\t\t\t\t</div>\n\t\t\t\t<div className='hash-select'>\n\t\t\t\t<FormControl componentClass=\"select\" placeholder='false' ref=\"Custom_Pool_PPS\">\n\t\t\t\t\t<option value='no'>False</option>\n\t\t\t\t\t<option value='yes'>True</option>\n\t\t\t\t</FormControl>\n\t\t\t\t</div>\n\t\t\t\t</div><br/>\n\t\t\t\t<Button onClick={() => this.onAddPoolConfirm()}> Add Pool</Button>\n\t\t\t\t<Button onClick={() => this.onAddPoolCancel()}> Cancel</Button>\n\t\t\t</FormGroup>\n\t\tvar hidden_custom_pool_component =\n\t\t<FormGroup>\n\t\t<OverlayTrigger trigger=\"hover\" placement=\"top\" overlay=<Tooltip>add a custom pool</Tooltip>>\n\t\t<Button onClick={() => this.onAddPool()}> Add Pool</Button>\n\t\t</OverlayTrigger>\n\t\t</FormGroup>\n\n\t\t/* add pool element to add new pool */\n\t\tvar add_pool_component = hidden_custom_pool_component;\n\t\tif(this.state.showCustomPoolOptions)\n\t\t\tadd_pool_component = shown_custom_pool_component;\n\n\t\tvar shown_custom_currency_component =\n\t\t\t\t<FormGroup controlId=\"custom_pool_elements\">\n\t\t\t\t\t<div className='inline'>\n\t\t\t\t\t<div className='narrow-form3'><ControlLabel>Currency Name</ControlLabel></div>\n\t\t\t\t\t<div className='narrow-form2'> <div className='left-margined'> <ControlLabel>Symbol</ControlLabel> </div> </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='inline'>\n\t\t\t\t\t<div className='narrow-form3'> <FormControl type=\"text\" ref=\"Custom_Currency_Name\"/></div>\n\t\t\t\t\t<div className='narrow-form1'> <div className='left-margined'> <FormControl type=\"text\" ref=\"Custom_Currency_Symbol\"/></div></div>\n\t\t\t\t\t</div> <br/>\n\t\t\t\t\t<div className='inline'>\n\t\t\t\t\t<div className='narrow-form3'><ControlLabel>Price (USD)</ControlLabel></div>\n\t\t\t\t\t<OverlayTrigger trigger=\"hover\" placement=\"top\" overlay=<Tooltip>coins rewarded per block</Tooltip>>\n\t\t\t\t\t<div className='narrow-form2'> <div className='left-margined'> <ControlLabel>Reward (Coins)</ControlLabel> </div> </div>\n\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='inline'>\n\t\t\t\t\t<div className='narrow-form3'> <FormControl type=\"text\" ref=\"Custom_Currency_Price\"/></div>\n\t\t\t\t\t<div className='narrow-form1'> <div className='left-margined'> <FormControl type=\"text\" ref=\"Custom_Currency_Reward\"/></div></div>\n\t\t\t\t\t</div><br/>\n\n\t\t\t\t\t<div className='inline'>\n\t\t\t\t\t<div className='narrow-form3'><ControlLabel>Mining Algorithm</ControlLabel></div>\n\t\t\t\t\t<div className='left-margined'><div className='narrow-form1'><ControlLabel>Block Time (secs)</ControlLabel></div></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='inline'>\n\t\t\t\t\t<div className='narrow-form3'><FormControl componentClass=\"select\" placeholder=\"SHA-256\" ref=\"Custom_Currency_Algo\">\n\t\t\t\t\t\t\t\t\t\t{algo_select}\n\t\t\t\t\t</FormControl></div>\n\t\t\t\t\t<div className='narrow-form1'><div className='left-margined'><FormControl type=\"text\" ref=\"Custom_Currency_Block_Time\"/></div></div>\n\t\t\t\t\t</div><br/>\n\n\t\t\t\t\t<div className='narrow-form3'><ControlLabel>Currency Total Hash Rate</ControlLabel></div>\n\t\t\t\t\t<div className='inline'>\n\t\t\t\t\t<div className='narrow-form3'><FormControl type=\"text\" ref=\"Custom_Currency_Total_Hash\" /></div>\n\t\t\t\t\t<div className='hash-select'>\n\t\t\t\t\t<FormControl componentClass=\"select\" placeholder=\"GH/s\" ref=\"Custom_Currency_Conversion\">\n\t\t\t\t\t\t<option value=\"GH/s\">GH/s</option>\n\t\t\t\t\t\t<option value=\"TH/s\">TH/s</option>\n\t\t\t\t\t\t<option value=\"PH/s\">PH/s</option>\n\t\t\t\t\t\t<option value=\"EH/s\">EH/s</option>\n\t\t\t\t\t</FormControl>\n\t\t\t\t\t</div> </div> <br />\n\n\t\t\t\t\t<div className='narrow-form1'><ControlLabel>Currency Color</ControlLabel></div>\n\t\t\t\t\t<div className='narrow-form1'>\n\t\t\t\t\t<FormControl componentClass=\"select\" placeholder=\"GH/s\" ref=\"Custom_Currency_Color\">\n\t\t\t\t\t\t<option value=\"#100c08\">Black</option>\n\t\t\t\t\t  <option value=\"#4682b4\">Blue</option>\n\t\t\t\t\t\t<option value=\"#a67b5b\">Brown</option>\n\t\t\t\t\t\t<option value=\"#b1b3b0\">Gray</option>\n\t\t\t\t\t\t<option value=\"#2bd849\">Green</option>\n\t\t\t\t\t\t<option value=\"#ed872d\">Orange</option>\n\t\t\t\t\t\t<option value=\"#ff9ecb\">Pink</option>\n\t\t\t\t\t\t<option value=\"#8a2be2\">Purple</option>\n\t\t\t\t\t\t<option value=\"#cf0000\">Red</option>\n\t\t\t\t\t\t<option value=\"#eff676\">Yellow</option>\n\t\t\t\t\t</FormControl>\n\t\t\t\t\t</div><br/>\n\n\t\t\t\t\t<Button onClick={() => this.onAddCurrencyConfirm()}> Add Currency</Button>\n\t\t\t\t\t<Button onClick={() => this.onAddCurrencyCancel()}> Cancel</Button>\n\t\t\t\t</FormGroup>\n\t\tvar hidden_custom_currency_component =\n\t\t<FormGroup>\n\t\t<OverlayTrigger trigger=\"hover\" placement=\"top\" overlay=<Tooltip>add a custom currency</Tooltip>>\n\t\t<Button onClick={() => this.onAddCurrency()}> Add Currency</Button>\n\t\t</OverlayTrigger>\n\t\t</FormGroup>\n\n\t\tvar hash_component = [];\n\t\tif(!this.state.isMultiAlgo) {\n\t\t\thash_component =\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t          <ControlLabel>Your Hash Power</ControlLabel>\n\t\t\t\t\t\t\t\t\t<div className='inline'>\n\t\t\t\t          <div className='narrow-form3'> <FormControl inline type=\"text\" ref=\"Hash\"/></div>\n\t\t\t\t\t\t\t\t\t<div className='hash-select'>\n\t\t\t\t\t\t\t\t\t<FormControl componentClass=\"select\" placeholder=\"GH/s\" ref=\"Hash_Conversion\">\n\t\t\t\t\t\t\t\t\t\t<option value=\"GH/s\">GH/s</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"TH/s\">TH/s</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"PH/s\">PH/s</option>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t</div> </div>\n\t\t\t\t          <HelpBlock>Your total mining hash power.</HelpBlock>\n\t\t\t\t        </FormGroup>\n\t\t}\n\t\telse {\n\t\t\tvar algos = [];\n\t\t\tfor(var n in this.state.currencies)\n\t\t\t\tif(this.state.currencies[n].checked && algos.indexOf(this.state.currencies[n].algo) < 0)\n\t\t\t\t\talgos.push(this.state.currencies[n].algo);\n\n\t\t\tfor(var a in algos) {\n\t\t\t\tvar name = \"Hash_\"+algos[a];\n\t\t\t\tvar conversion = \"Hash_Conversion_\"+algos[a];\n\t\t\t\thash_component.push(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t          <ControlLabel>Your Hash Power for {algos[a]}</ControlLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='inline'>\n\t\t\t\t\t\t\t\t          <div className='narrow-form3'> <FormControl inline type=\"text\" ref={name}/></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='hash-select'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl componentClass=\"select\" placeholder=\"GH/s\" ref={conversion}> //TODO ON CHANGE METHOD\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"GH/s\">GH/s</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"TH/s\">TH/s</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"PH/s\">PH/s</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> </div>\n\t\t\t\t\t\t\t\t          <HelpBlock>Your mining hash power for {algos[a]}.</HelpBlock>\n\t\t\t\t\t\t\t\t        </FormGroup>)\n\t\t\t}\n\t\t}\n\n\n\t\tvar add_currency_component = hidden_custom_currency_component;\n\t\tif(this.state.showCustomCurrencyOptions)\n\t\t\tadd_currency_component = shown_custom_currency_component;\n  \tvar cnt1 = 0;\n\t\tvar currency_boxes = [];\n\t\tfor(var name in this.state.currencies) {\n\t\t\tcurrency_boxes.push(\n\t\t\t<>\n\t\t\t<Checkbox inline\n\t\t\t  \t\tid = {name}\n\t          checked = {this.state.currencies[name].checked}\n\t          onChange = {this.onCurrencyBoxChange(name)}\n\t    > {name} </Checkbox>\n\t\t\t</>\n\t\t\t);\n      cnt1++;\n     \tif(cnt1 == 5) { currency_boxes.push(<><br/></>); cnt1 = 0; } // move to new line after 5 elements for formatting\n\t\t}\n\t\tvar cnt2 = 0;\n\t\tvar pool_boxes = [];\n\t\tfor(var name in this.state.pools) {\n\t\t\tif(this.state.pools[name].show == true) {\n\t\t\t\tpool_boxes.push(\n\t\t\t\t<> <Checkbox inline\n\t\t\t\t  \t\tid = {name}\n\t\t          checked = {this.state.pools[name].checked}\n\t\t          onChange = {this.onPoolBoxChange(name)}\n\t\t    > {name} </Checkbox></>);\n\t\t    cnt2++;\n\t\t\t}\n\t    if(cnt2 == 2) { pool_boxes.push(<><br/></>); cnt2 = 0; } // move to new line after 3 elements for formatting\n\t\t}\n\n\t \treturn (\n\t      <form>\n\t      \t<ControlLabel>Currencies</ControlLabel>\n\t        <FormGroup controlId=\"currencies\"> <tbody>{currency_boxes}</tbody> </FormGroup>\n\n\t\t\t\t\t{add_currency_component}\n\n\t        <ControlLabel>Mining Pools</ControlLabel>\n\t        <FormGroup controlId=\"pools\"> <tbody>{pool_boxes}</tbody> </FormGroup>\n\n\t        {add_pool_component}\n\n\t\t\t\t\t{hash_component}\n\n\t        <FormGroup>\n\t\t\t\t\t<OverlayTrigger trigger=\"hover\" placement=\"top\" overlay=<Tooltip>risk factor of inconsistent reward</Tooltip>>\n\t\t\t\t\t<div className='narrow-form2'> <ControlLabel>Risk Aversion</ControlLabel></div>\n\t\t\t\t\t</OverlayTrigger>\n\t          <div className='narrow-form2'> <FormControl type=\"text\" ref=\"Risk\"/></div>\n\t          <HelpBlock>Suggested range 1-10.</HelpBlock>\n\t        </FormGroup>\n\n\t        <Button onClick={() => this.onSubmit()}> Submit </Button>\n\t       </form>\n\t    );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}